import os
import subprocess
import json
import requests

CONFIG_FILE = "config.json"
GITHUB_API = "https://api.github.com"

def load_config():
    try:
        with open(CONFIG_FILE, "r") as f:
            return json.load(f)
    except FileNotFoundError:
        print("Erreur : config.json introuvable.")
        exit(1)
    except json.JSONDecodeError:
        print("Erreur : config.json mal form√©.")
        exit(1)

def run_cmd(cmd, cwd=None):
    print(f"$ {' '.join(cmd)}")
    result = subprocess.run(cmd, cwd=cwd, capture_output=True, text=True)
    if result.returncode != 0:
        print("Erreur:", result.stderr.strip())
        exit(1)
    return result.stdout.strip()

def github_repo_exists(repo_name, token, user):
    headers = {"Authorization": f"token {token}"}
    url = f"{GITHUB_API}/repos/{user}/{repo_name}"
    response = requests.get(url, headers=headers)
    return response.status_code == 200

def create_github_repo(repo_name, token, user):
    headers = {"Authorization": f"token {token}"}
    data = {"name": repo_name, "private": False}
    response = requests.post(f"{GITHUB_API}/user/repos", json=data, headers=headers)
    if response.status_code == 201:
        print(f"‚úÖ D√©p√¥t GitHub '{repo_name}' cr√©√©.")
    elif response.status_code == 422:
        print(f"‚ö†Ô∏è D√©p√¥t '{repo_name}' d√©j√† existant.")
    else:
        print("‚ùå Erreur API GitHub:", response.text)
        exit(1)

def push_folder(folder, branch, token, user):
    path = os.path.abspath(folder)
    repo_name = os.path.basename(path)

    is_git_repo = os.path.exists(os.path.join(path, ".git"))

    if not is_git_repo:
        print("üü¢ Initialisation du d√©p√¥t Git local...")
        run_cmd(["git", "init"], cwd=path)
        run_cmd(["git", "checkout", "-B", branch], cwd=path)
    else:
        print("üõ† D√©p√¥t Git d√©j√† existant.")
        run_cmd(["git", "checkout", branch], cwd=path)
        run_cmd(["git", "pull", "--rebase", "origin", branch], cwd=path)

    run_cmd(["git", "add", "."], cwd=path)
    run_cmd(["git", "commit", "-m", "Mise √† jour"], cwd=path)

    # Check si le repo existe sur GitHub
    if not github_repo_exists(repo_name, token, user):
        create_github_repo(repo_name, token, user)

    remote_url = f"https://github.com/{user}/{repo_name}.git"

    # Ajouter "origin" si pas encore configur√©
    remotes = run_cmd(["git", "remote"], cwd=path)
    if "origin" not in remotes:
        run_cmd(["git", "remote", "add", "origin", remote_url], cwd=path)

    run_cmd(["git", "push", "-u", "origin", branch], cwd=path)

def main():
    config = load_config()

    token = config["token"]
    user = config["user"]
    folder_input = config.get("folder", "all")
    branch = config.get("branch", "main")

    if folder_input.lower() == "all":
        folders = [f for f in os.listdir(".") if os.path.isdir(f) and not f.startswith(".")]
    else:
        folders = [folder_input]

    for folder in folders:
        print(f"\nüì¶ Pushing '{folder}' ‚Üí branche '{branch}'")
        push_folder(folder, branch, token, user)

if __name__ == "__main__":
    main()
